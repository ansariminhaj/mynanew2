upstream api {
      server backend:8000;
}

server {
    listen 8080;
    server_name mynacode www.mynacode.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }    
}

server {
	listen 443 ssl;

	server_name mynacode www.mynacode.com;

        ssl_certificate /etc/letsencrypt/live/www.mynacode.com/fullchain.pem;
	ssl_certificate_key  /etc/letsencrypt/live/www.mynacode.com/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	location / {
    		proxy_read_timeout 300s;
    		proxy_connect_timeout 75s;
		root /var/www/react;
		try_files $uri /index.html;
		proxy_set_header Host $host;
	}

	location /api/ {
    		proxy_read_timeout 300s;
    		proxy_connect_timeout 75s;
		proxy_pass http://api;
		proxy_set_header Host $http_host;
	}


}







version: '3'

services:
  backend:
    image: ansariuminhaj/mynacode:mynacode-backend
    command: gunicorn djreact.wsgi --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes:
      - media_vol:/backend/media
    depends_on:
      - pgdb
  pgdb:
    image: ansariuminhaj/mynacode:postgres 
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data
  frontend:
    image: ansariuminhaj/mynacode:mynacode-frontend 
    volumes:
      - react_build:/frontend/build
  nginx:
    image: ansariuminhaj/mynacode:nginx
    ports:
      - 80:8080
      - 443:443
    volumes:
      - ./nginx/nginx_setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - media_vol:/var/www/react/media
    depends_on:
      - backend
      - frontend
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot


volumes:
  react_build:
  pgdata:
  media_vol: